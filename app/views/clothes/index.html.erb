<div class="container">
  <div class="row">
    <div class="col-8 offset-md-1">
      <h3 class="font-weight-bold">コーディネート画面</h3>
      <div class="dp" id="drop1"></div>
      <div class="dp" id="drop2"></div>
      <div class="dp" id="drop3"></div>
      <div id="dragarea">
        <% @clothes.each do |clothe| %>
          <%= attachment_image_tag clothe, :image, size: "160x200", id: "clothe#{clothe.id}" %>
        <% end %>
      </div>
    </div>
  </div>

<script>
//imgタグ要素を全て取得する
var elm = document.getElementsByTagName("img");
for ( var i=0 ; i < elm.length ; i++ )
{
  elm[i].addEventListener("dragstart", function(evt){
    evt.dataTransfer.setData("text/plain",evt.target.id);
    evt.stopPropagation();
  },false);
}

//クラス名「dp」を持つdivタグを全て取得する
var droparea = document.querySelectorAll("div.dp");

//全てのドロップ要素にdropイベントを追加する
for ( var i=0; i < droparea.length ; i++ )
{
  droparea[i].addEventListener("drop", function(evt){
    var id = evt.dataTransfer.getData( "text/plain" );
    var obj1 = document.getElementById( id );
    //ドロップされるdivタグをgetElementById()で取得し直す
    var obj2 = document.getElementById( evt.target.id );

    if( obj1 )
    {
      obj2.appendChild( obj1 );
    }
    evt.preventDefault();
  },false);
  //２つのイベントでデフォルト動作を抑制する
  droparea[i].addEventListener( "dragenter" , function(evt){
    evt.preventDefault();
  }, false );
  droparea[i].addEventListener( "dragover" , function(evt){
    evt.preventDefault();
  }, false );
}
</script>
