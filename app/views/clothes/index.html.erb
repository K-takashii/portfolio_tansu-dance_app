  <h3 class="title">コーディネート画面</h3>
  <h4 class="text-center">ここでは登録した服をドラッグ&ドロップでコーディネートできます！</h4>
  <div class="row" id="code">
    <div class="col-sm-4" id="code-box">
      <div class="dresser">
        <%= image_tag 'dresser.png'%>
      </div>
    </div>
    <div class="col-sm-4" id="code-box">
      <div class="text-center">
        <div><%= image_tag 'outer.png'%></div>
        <div><%= image_tag 'tops.png'%></div>
        <div><%= image_tag 'bottoms.png'%></div>
      </div>
    </div>
    <div class="col-sm-4" id="code-box">
      <div class="drop">
        <div class="dp" id="drop1"></div>
        <div class="dp" id="drop2"></div>
        <div class="dp" id="drop3"></div>
      </div>
    </div>
  </div>

  <div class="row" id="code">
    <div class="col-12">
      <div id="dragarea">
        <div class="tab-panel">
          <!--タブ-->
          <ul class="tab-group">
            <li class="tab is-active">アウター</li>
            <li class="tab">トップス</li>
            <li class="tab">ボトムス</li>
         </ul>
        </div>

        <!--タブを切り替えて表示するコンテンツ-->
        <div class="panel-group">
          <div class="panel is-show">
            <div class="scroll">
              <% @outer_clothes.each do |clothe| %>
                <div><%= attachment_image_tag clothe, :image, size: "100x100", id: "clothe#{clothe.id}" %></div>
              <% end %>
            </div>
          </div>
          <div class="panel">
            <div class="scroll">
              <% @tops_clothes.each do |clothe| %>
                <div><%= attachment_image_tag clothe, :image, size: "100x100", id: "clothe#{clothe.id}" %></div>
              <% end %>
            </div>
          </div>
          <div class="panel">
            <div class="scroll">
              <% @bottom_clothes.each do |clothe| %>
                <%= attachment_image_tag clothe, :image, size: "100x100", id: "clothe#{clothe.id}" %>
              <% end %>
            </div>
          </div>
        </div><!-- /panel-group -->
      </div><!-- /dragarea -->
    </div><!-- /col-12 -->
  </div><!-- /row -->

<script>
//imgタグ要素を全て取得する
var elm = document.getElementsByTagName("img");
for ( var i=0 ; i < elm.length ; i++ )
{
  elm[i].addEventListener("dragstart", function(evt){
    // console.log(evt.target.id)
    evt.dataTransfer.setData("text/plain",evt.target.id);
    evt.stopPropagation();
  },false);
}

//クラス名「dp」を持つdivタグを全て取得する
var droparea = document.querySelectorAll("div.dp");

//全てのドロップ要素にdropイベントを追加する
for ( var i=0; i < droparea.length ; i++ )
{
  droparea[i].addEventListener("drop", function(evt){
    var id = evt.dataTransfer.getData( "text/plain" );
    var obj1 = document.getElementById( id );
    //ドロップされるdivタグをgetElementById()で取得し直す
    var obj2 = document.getElementById( evt.target.id );
    if( obj1 )
    {
      obj2.appendChild( obj1 );
    }
    evt.preventDefault();
  },false);
  //２つのイベントでデフォルト動作を抑制する
  droparea[i].addEventListener( "dragenter" , function(evt){
    evt.preventDefault();
  }, false );
  droparea[i].addEventListener( "dragover" , function(evt){
    evt.preventDefault();
  }, false );
}

document.addEventListener('DOMContentLoaded', function(){
  // タブに対してクリックイベントを適用
  const tabs = document.getElementsByClassName('tab');
  for(let i = 0; i < tabs.length; i++) {
    tabs[i].addEventListener('click', tabSwitch, false);
  }

  // タブをクリックすると実行する関数
  function tabSwitch(){
    // タブのclassの値を変更
    document.getElementsByClassName('is-active')[0].classList.remove('is-active');
    this.classList.add('is-active');
    // コンテンツのclassの値を変更
    document.getElementsByClassName('is-show')[0].classList.remove('is-show');
    const arrayTabs = Array.prototype.slice.call(tabs);
    const index = arrayTabs.indexOf(this);
    document.getElementsByClassName('panel')[index].classList.add('is-show');
  };
}, false);
</script>
